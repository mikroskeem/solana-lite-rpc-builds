name: "Build blockworks-foundation/lite-rpc"

on:
  workflow_dispatch:
    inputs:
      ref:
        description: "Git ref"
        required: true
        type: "string"

jobs:
  build:
    name: "Build (${{ matrix.target }})"
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        target:
          - "generic"
          - "znver3"
          - "znver4"
        include:
          - target: "generic"
            rust_target: "x86_64-unknown-linux-gnu"
            rustflags: "--cfg tokio_unstable -C target-cpu=x86-64-v3"
          - target: "znver3"
            rust_target: "x86_64-unknown-linux-gnu"
            rustflags: "--cfg tokio_unstable -C target-cpu=znver3"
          - target: "znver4"
            rust_target: "x86_64-unknown-linux-gnu"
            rustflags: "--cfg tokio_unstable -C target-cpu=znver4"
    steps:
      - id: "install-rust-toolchain"
        name: "Install Rust toolchain"
        uses: "dtolnay/rust-toolchain@stable"

      - id: "checkout"
        name: "Checkout code"
        uses: "actions/checkout@v4"
        with:
          repository: "blockworks-foundation/lite-rpc"
          filter: "tree:0"
          ref: "${{ inputs.ref }}"

      - id: "build"
        name: "Build project"
        env:
          CARGO_INCREMENTAL: "0"
          CARGO_BUILD_TARGET: "${{ matrix.rust_target }}"
          RUSTFLAGS: "${{ matrix.rustflags }}"
        run: |
          cargo build --release --bin lite-rpc --bin solana-lite-rpc-quic-forward-proxy

          mkdir -p __output
          cp -v target/${{ matrix.rust_target }}/release/lite-rpc __output/lite-rpc-${{ matrix.target }}
          cp -v target/${{ matrix.rust_target }}/release/solana-lite-rpc-quic-forward-proxy __output/solana-lite-rpc-quic-forward-proxy-${{ matrix.target }}

      - id: "upload-artifacts"
        name: "Upload artifacts"
        uses: "actions/upload-artifact@v4"
        with:
          name: "build-artifacts-${{ matrix.target }}"
          path: |
            __output/*
          if-no-files-found: "error"
          retention-days: 5

  publish:
    name: "Publish"
    runs-on: "ubuntu-latest"
    needs: "build"
    permissions:
      attestations: "write"
      contents: "write"
      id-token: "write"
    steps:
      - id: "create-release-directory"
        name: "Create release directory"
        run: |
          mkdir -p release

      - id: "download-artifacts"
        name: "Download all artifacts"
        uses: "actions/download-artifact@v4"
        with:
          path: "release"
          merge-multiple: true
          pattern: "build-artifacts-*"

      - id: "generate-checksum"
        name: "Generate checksums"
        run: |
          (cd release; sha256sum *) > release/SHA256SUMS

      - id: "publish"
        name: "Publish Github release"
        uses: "softprops/action-gh-release@v2"
        with:
          files: |
            release/*
          tag_name: "ref-${{ inputs.ref }}"
          draft: false
          prerelease: false
          fail_on_unmatched_files: true
          generate_release_notes: false

      - id: "attest"
        name: "Attest"
        uses: "actions/attest-build-provenance@v1"
        with:
          subject-path: |
            release/*
